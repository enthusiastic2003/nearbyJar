// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device_to_device_messages.proto
// Protobuf Java Version: 4.26.1

package com.google.security.cryptauth.lib.securegcm;

public final class DeviceToDeviceMessagesProto {
  private DeviceToDeviceMessagesProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      DeviceToDeviceMessagesProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Type of curve
   * </pre>
   *
   * Protobuf enum {@code securegcm.Curve}
   */
  public enum Curve
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ED_25519 = 1;</code>
     */
    ED_25519(1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Curve.class.getName());
    }
    /**
     * <code>ED_25519 = 1;</code>
     */
    public static final int ED_25519_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Curve valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Curve forNumber(int value) {
      switch (value) {
        case 1: return ED_25519;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Curve>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Curve> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Curve>() {
            public Curve findValueByNumber(int number) {
              return Curve.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final Curve[] VALUES = values();

    public static Curve valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Curve(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:securegcm.Curve)
  }

  public interface DeviceToDeviceMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.DeviceToDeviceMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * the payload of the message
     * </pre>
     *
     * <code>optional bytes message = 1;</code>
     * @return Whether the message field is set.
     */
    boolean hasMessage();
    /**
     * <pre>
     * the payload of the message
     * </pre>
     *
     * <code>optional bytes message = 1;</code>
     * @return The message.
     */
    com.google.protobuf.ByteString getMessage();

    /**
     * <pre>
     * the sequence number of the message - must be increasing.
     * </pre>
     *
     * <code>optional int32 sequence_number = 2;</code>
     * @return Whether the sequenceNumber field is set.
     */
    boolean hasSequenceNumber();
    /**
     * <pre>
     * the sequence number of the message - must be increasing.
     * </pre>
     *
     * <code>optional int32 sequence_number = 2;</code>
     * @return The sequenceNumber.
     */
    int getSequenceNumber();
  }
  /**
   * <pre>
   * Used by protocols between devices
   * </pre>
   *
   * Protobuf type {@code securegcm.DeviceToDeviceMessage}
   */
  public static final class DeviceToDeviceMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.DeviceToDeviceMessage)
      DeviceToDeviceMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        DeviceToDeviceMessage.class.getName());
    }
    // Use DeviceToDeviceMessage.newBuilder() to construct.
    private DeviceToDeviceMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DeviceToDeviceMessage() {
      message_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_DeviceToDeviceMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_DeviceToDeviceMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage.Builder.class);
    }

    private int bitField0_;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * the payload of the message
     * </pre>
     *
     * <code>optional bytes message = 1;</code>
     * @return Whether the message field is set.
     */
    @java.lang.Override
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * the payload of the message
     * </pre>
     *
     * <code>optional bytes message = 1;</code>
     * @return The message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMessage() {
      return message_;
    }

    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 2;
    private int sequenceNumber_ = 0;
    /**
     * <pre>
     * the sequence number of the message - must be increasing.
     * </pre>
     *
     * <code>optional int32 sequence_number = 2;</code>
     * @return Whether the sequenceNumber field is set.
     */
    @java.lang.Override
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * the sequence number of the message - must be increasing.
     * </pre>
     *
     * <code>optional int32 sequence_number = 2;</code>
     * @return The sequenceNumber.
     */
    @java.lang.Override
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, message_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, sequenceNumber_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, message_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sequenceNumber_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage other = (com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage) obj;

      if (hasMessage() != other.hasMessage()) return false;
      if (hasMessage()) {
        if (!getMessage()
            .equals(other.getMessage())) return false;
      }
      if (hasSequenceNumber() != other.hasSequenceNumber()) return false;
      if (hasSequenceNumber()) {
        if (getSequenceNumber()
            != other.getSequenceNumber()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMessage()) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
      }
      if (hasSequenceNumber()) {
        hash = (37 * hash) + SEQUENCE_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceNumber();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used by protocols between devices
     * </pre>
     *
     * Protobuf type {@code securegcm.DeviceToDeviceMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.DeviceToDeviceMessage)
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_DeviceToDeviceMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_DeviceToDeviceMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        message_ = com.google.protobuf.ByteString.EMPTY;
        sequenceNumber_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_DeviceToDeviceMessage_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage build() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage buildPartial() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage result = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.message_ = message_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sequenceNumber_ = sequenceNumber_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage other) {
        if (other == com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                message_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                sequenceNumber_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * the payload of the message
       * </pre>
       *
       * <code>optional bytes message = 1;</code>
       * @return Whether the message field is set.
       */
      @java.lang.Override
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * the payload of the message
       * </pre>
       *
       * <code>optional bytes message = 1;</code>
       * @return The message.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMessage() {
        return message_;
      }
      /**
       * <pre>
       * the payload of the message
       * </pre>
       *
       * <code>optional bytes message = 1;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        message_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the payload of the message
       * </pre>
       *
       * <code>optional bytes message = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }

      private int sequenceNumber_ ;
      /**
       * <pre>
       * the sequence number of the message - must be increasing.
       * </pre>
       *
       * <code>optional int32 sequence_number = 2;</code>
       * @return Whether the sequenceNumber field is set.
       */
      @java.lang.Override
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * the sequence number of the message - must be increasing.
       * </pre>
       *
       * <code>optional int32 sequence_number = 2;</code>
       * @return The sequenceNumber.
       */
      @java.lang.Override
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <pre>
       * the sequence number of the message - must be increasing.
       * </pre>
       *
       * <code>optional int32 sequence_number = 2;</code>
       * @param value The sequenceNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNumber(int value) {

        sequenceNumber_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the sequence number of the message - must be increasing.
       * </pre>
       *
       * <code>optional int32 sequence_number = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.DeviceToDeviceMessage)
    }

    // @@protoc_insertion_point(class_scope:securegcm.DeviceToDeviceMessage)
    private static final com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage();
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceToDeviceMessage>
        PARSER = new com.google.protobuf.AbstractParser<DeviceToDeviceMessage>() {
      @java.lang.Override
      public DeviceToDeviceMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DeviceToDeviceMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceToDeviceMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.DeviceToDeviceMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InitiatorHelloOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.InitiatorHello)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The session public key to send to the responder
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     * @return Whether the publicDhKey field is set.
     */
    boolean hasPublicDhKey();
    /**
     * <pre>
     * The session public key to send to the responder
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     * @return The publicDhKey.
     */
    com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey getPublicDhKey();
    /**
     * <pre>
     * The session public key to send to the responder
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     */
    com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder getPublicDhKeyOrBuilder();

    /**
     * <pre>
     * The protocol version
     * </pre>
     *
     * <code>optional int32 protocol_version = 2 [default = 0];</code>
     * @return Whether the protocolVersion field is set.
     */
    boolean hasProtocolVersion();
    /**
     * <pre>
     * The protocol version
     * </pre>
     *
     * <code>optional int32 protocol_version = 2 [default = 0];</code>
     * @return The protocolVersion.
     */
    int getProtocolVersion();
  }
  /**
   * <pre>
   * sent as the first message from initiator to responder
   * in an unauthenticated Diffie-Hellman Key Exchange
   * </pre>
   *
   * Protobuf type {@code securegcm.InitiatorHello}
   */
  public static final class InitiatorHello extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.InitiatorHello)
      InitiatorHelloOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        InitiatorHello.class.getName());
    }
    // Use InitiatorHello.newBuilder() to construct.
    private InitiatorHello(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private InitiatorHello() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_InitiatorHello_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_InitiatorHello_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello.Builder.class);
    }

    private int bitField0_;
    public static final int PUBLIC_DH_KEY_FIELD_NUMBER = 1;
    private com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey publicDhKey_;
    /**
     * <pre>
     * The session public key to send to the responder
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     * @return Whether the publicDhKey field is set.
     */
    @java.lang.Override
    public boolean hasPublicDhKey() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The session public key to send to the responder
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     * @return The publicDhKey.
     */
    @java.lang.Override
    public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey getPublicDhKey() {
      return publicDhKey_ == null ? com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance() : publicDhKey_;
    }
    /**
     * <pre>
     * The session public key to send to the responder
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     */
    @java.lang.Override
    public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder getPublicDhKeyOrBuilder() {
      return publicDhKey_ == null ? com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance() : publicDhKey_;
    }

    public static final int PROTOCOL_VERSION_FIELD_NUMBER = 2;
    private int protocolVersion_ = 0;
    /**
     * <pre>
     * The protocol version
     * </pre>
     *
     * <code>optional int32 protocol_version = 2 [default = 0];</code>
     * @return Whether the protocolVersion field is set.
     */
    @java.lang.Override
    public boolean hasProtocolVersion() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The protocol version
     * </pre>
     *
     * <code>optional int32 protocol_version = 2 [default = 0];</code>
     * @return The protocolVersion.
     */
    @java.lang.Override
    public int getProtocolVersion() {
      return protocolVersion_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasPublicDhKey()) {
        if (!getPublicDhKey().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getPublicDhKey());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, protocolVersion_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPublicDhKey());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, protocolVersion_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello other = (com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello) obj;

      if (hasPublicDhKey() != other.hasPublicDhKey()) return false;
      if (hasPublicDhKey()) {
        if (!getPublicDhKey()
            .equals(other.getPublicDhKey())) return false;
      }
      if (hasProtocolVersion() != other.hasProtocolVersion()) return false;
      if (hasProtocolVersion()) {
        if (getProtocolVersion()
            != other.getProtocolVersion()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPublicDhKey()) {
        hash = (37 * hash) + PUBLIC_DH_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicDhKey().hashCode();
      }
      if (hasProtocolVersion()) {
        hash = (37 * hash) + PROTOCOL_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getProtocolVersion();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * sent as the first message from initiator to responder
     * in an unauthenticated Diffie-Hellman Key Exchange
     * </pre>
     *
     * Protobuf type {@code securegcm.InitiatorHello}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.InitiatorHello)
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHelloOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_InitiatorHello_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_InitiatorHello_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPublicDhKeyFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        publicDhKey_ = null;
        if (publicDhKeyBuilder_ != null) {
          publicDhKeyBuilder_.dispose();
          publicDhKeyBuilder_ = null;
        }
        protocolVersion_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_InitiatorHello_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello build() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello buildPartial() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello result = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.publicDhKey_ = publicDhKeyBuilder_ == null
              ? publicDhKey_
              : publicDhKeyBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.protocolVersion_ = protocolVersion_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello other) {
        if (other == com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello.getDefaultInstance()) return this;
        if (other.hasPublicDhKey()) {
          mergePublicDhKey(other.getPublicDhKey());
        }
        if (other.hasProtocolVersion()) {
          setProtocolVersion(other.getProtocolVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasPublicDhKey()) {
          if (!getPublicDhKey().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPublicDhKeyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                protocolVersion_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey publicDhKey_;
      private com.google.protobuf.SingleFieldBuilder<
          com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder> publicDhKeyBuilder_;
      /**
       * <pre>
       * The session public key to send to the responder
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       * @return Whether the publicDhKey field is set.
       */
      public boolean hasPublicDhKey() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The session public key to send to the responder
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       * @return The publicDhKey.
       */
      public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey getPublicDhKey() {
        if (publicDhKeyBuilder_ == null) {
          return publicDhKey_ == null ? com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance() : publicDhKey_;
        } else {
          return publicDhKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The session public key to send to the responder
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public Builder setPublicDhKey(com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey value) {
        if (publicDhKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          publicDhKey_ = value;
        } else {
          publicDhKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The session public key to send to the responder
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public Builder setPublicDhKey(
          com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder builderForValue) {
        if (publicDhKeyBuilder_ == null) {
          publicDhKey_ = builderForValue.build();
        } else {
          publicDhKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The session public key to send to the responder
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public Builder mergePublicDhKey(com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey value) {
        if (publicDhKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            publicDhKey_ != null &&
            publicDhKey_ != com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance()) {
            getPublicDhKeyBuilder().mergeFrom(value);
          } else {
            publicDhKey_ = value;
          }
        } else {
          publicDhKeyBuilder_.mergeFrom(value);
        }
        if (publicDhKey_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The session public key to send to the responder
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public Builder clearPublicDhKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        publicDhKey_ = null;
        if (publicDhKeyBuilder_ != null) {
          publicDhKeyBuilder_.dispose();
          publicDhKeyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The session public key to send to the responder
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder getPublicDhKeyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPublicDhKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The session public key to send to the responder
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder getPublicDhKeyOrBuilder() {
        if (publicDhKeyBuilder_ != null) {
          return publicDhKeyBuilder_.getMessageOrBuilder();
        } else {
          return publicDhKey_ == null ?
              com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance() : publicDhKey_;
        }
      }
      /**
       * <pre>
       * The session public key to send to the responder
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder> 
          getPublicDhKeyFieldBuilder() {
        if (publicDhKeyBuilder_ == null) {
          publicDhKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder>(
                  getPublicDhKey(),
                  getParentForChildren(),
                  isClean());
          publicDhKey_ = null;
        }
        return publicDhKeyBuilder_;
      }

      private int protocolVersion_ ;
      /**
       * <pre>
       * The protocol version
       * </pre>
       *
       * <code>optional int32 protocol_version = 2 [default = 0];</code>
       * @return Whether the protocolVersion field is set.
       */
      @java.lang.Override
      public boolean hasProtocolVersion() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The protocol version
       * </pre>
       *
       * <code>optional int32 protocol_version = 2 [default = 0];</code>
       * @return The protocolVersion.
       */
      @java.lang.Override
      public int getProtocolVersion() {
        return protocolVersion_;
      }
      /**
       * <pre>
       * The protocol version
       * </pre>
       *
       * <code>optional int32 protocol_version = 2 [default = 0];</code>
       * @param value The protocolVersion to set.
       * @return This builder for chaining.
       */
      public Builder setProtocolVersion(int value) {

        protocolVersion_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The protocol version
       * </pre>
       *
       * <code>optional int32 protocol_version = 2 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearProtocolVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        protocolVersion_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.InitiatorHello)
    }

    // @@protoc_insertion_point(class_scope:securegcm.InitiatorHello)
    private static final com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello();
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InitiatorHello>
        PARSER = new com.google.protobuf.AbstractParser<InitiatorHello>() {
      @java.lang.Override
      public InitiatorHello parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<InitiatorHello> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InitiatorHello> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.InitiatorHello getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponderHelloOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.ResponderHello)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The session public key to send to the initiator
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     * @return Whether the publicDhKey field is set.
     */
    boolean hasPublicDhKey();
    /**
     * <pre>
     * The session public key to send to the initiator
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     * @return The publicDhKey.
     */
    com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey getPublicDhKey();
    /**
     * <pre>
     * The session public key to send to the initiator
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     */
    com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder getPublicDhKeyOrBuilder();

    /**
     * <pre>
     * The protocol version
     * </pre>
     *
     * <code>optional int32 protocol_version = 2 [default = 0];</code>
     * @return Whether the protocolVersion field is set.
     */
    boolean hasProtocolVersion();
    /**
     * <pre>
     * The protocol version
     * </pre>
     *
     * <code>optional int32 protocol_version = 2 [default = 0];</code>
     * @return The protocolVersion.
     */
    int getProtocolVersion();
  }
  /**
   * <pre>
   * sent inside the header of the first message from the responder to the
   * initiator in an unauthenticated Diffie-Hellman Key Exchange
   * </pre>
   *
   * Protobuf type {@code securegcm.ResponderHello}
   */
  public static final class ResponderHello extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.ResponderHello)
      ResponderHelloOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        ResponderHello.class.getName());
    }
    // Use ResponderHello.newBuilder() to construct.
    private ResponderHello(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ResponderHello() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_ResponderHello_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_ResponderHello_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello.Builder.class);
    }

    private int bitField0_;
    public static final int PUBLIC_DH_KEY_FIELD_NUMBER = 1;
    private com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey publicDhKey_;
    /**
     * <pre>
     * The session public key to send to the initiator
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     * @return Whether the publicDhKey field is set.
     */
    @java.lang.Override
    public boolean hasPublicDhKey() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The session public key to send to the initiator
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     * @return The publicDhKey.
     */
    @java.lang.Override
    public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey getPublicDhKey() {
      return publicDhKey_ == null ? com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance() : publicDhKey_;
    }
    /**
     * <pre>
     * The session public key to send to the initiator
     * </pre>
     *
     * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
     */
    @java.lang.Override
    public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder getPublicDhKeyOrBuilder() {
      return publicDhKey_ == null ? com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance() : publicDhKey_;
    }

    public static final int PROTOCOL_VERSION_FIELD_NUMBER = 2;
    private int protocolVersion_ = 0;
    /**
     * <pre>
     * The protocol version
     * </pre>
     *
     * <code>optional int32 protocol_version = 2 [default = 0];</code>
     * @return Whether the protocolVersion field is set.
     */
    @java.lang.Override
    public boolean hasProtocolVersion() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The protocol version
     * </pre>
     *
     * <code>optional int32 protocol_version = 2 [default = 0];</code>
     * @return The protocolVersion.
     */
    @java.lang.Override
    public int getProtocolVersion() {
      return protocolVersion_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasPublicDhKey()) {
        if (!getPublicDhKey().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getPublicDhKey());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, protocolVersion_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPublicDhKey());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, protocolVersion_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello other = (com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello) obj;

      if (hasPublicDhKey() != other.hasPublicDhKey()) return false;
      if (hasPublicDhKey()) {
        if (!getPublicDhKey()
            .equals(other.getPublicDhKey())) return false;
      }
      if (hasProtocolVersion() != other.hasProtocolVersion()) return false;
      if (hasProtocolVersion()) {
        if (getProtocolVersion()
            != other.getProtocolVersion()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPublicDhKey()) {
        hash = (37 * hash) + PUBLIC_DH_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicDhKey().hashCode();
      }
      if (hasProtocolVersion()) {
        hash = (37 * hash) + PROTOCOL_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getProtocolVersion();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * sent inside the header of the first message from the responder to the
     * initiator in an unauthenticated Diffie-Hellman Key Exchange
     * </pre>
     *
     * Protobuf type {@code securegcm.ResponderHello}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.ResponderHello)
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHelloOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_ResponderHello_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_ResponderHello_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPublicDhKeyFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        publicDhKey_ = null;
        if (publicDhKeyBuilder_ != null) {
          publicDhKeyBuilder_.dispose();
          publicDhKeyBuilder_ = null;
        }
        protocolVersion_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_ResponderHello_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello build() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello buildPartial() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello result = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.publicDhKey_ = publicDhKeyBuilder_ == null
              ? publicDhKey_
              : publicDhKeyBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.protocolVersion_ = protocolVersion_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello other) {
        if (other == com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello.getDefaultInstance()) return this;
        if (other.hasPublicDhKey()) {
          mergePublicDhKey(other.getPublicDhKey());
        }
        if (other.hasProtocolVersion()) {
          setProtocolVersion(other.getProtocolVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasPublicDhKey()) {
          if (!getPublicDhKey().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPublicDhKeyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                protocolVersion_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey publicDhKey_;
      private com.google.protobuf.SingleFieldBuilder<
          com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder> publicDhKeyBuilder_;
      /**
       * <pre>
       * The session public key to send to the initiator
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       * @return Whether the publicDhKey field is set.
       */
      public boolean hasPublicDhKey() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The session public key to send to the initiator
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       * @return The publicDhKey.
       */
      public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey getPublicDhKey() {
        if (publicDhKeyBuilder_ == null) {
          return publicDhKey_ == null ? com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance() : publicDhKey_;
        } else {
          return publicDhKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The session public key to send to the initiator
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public Builder setPublicDhKey(com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey value) {
        if (publicDhKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          publicDhKey_ = value;
        } else {
          publicDhKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The session public key to send to the initiator
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public Builder setPublicDhKey(
          com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder builderForValue) {
        if (publicDhKeyBuilder_ == null) {
          publicDhKey_ = builderForValue.build();
        } else {
          publicDhKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The session public key to send to the initiator
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public Builder mergePublicDhKey(com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey value) {
        if (publicDhKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            publicDhKey_ != null &&
            publicDhKey_ != com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance()) {
            getPublicDhKeyBuilder().mergeFrom(value);
          } else {
            publicDhKey_ = value;
          }
        } else {
          publicDhKeyBuilder_.mergeFrom(value);
        }
        if (publicDhKey_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The session public key to send to the initiator
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public Builder clearPublicDhKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        publicDhKey_ = null;
        if (publicDhKeyBuilder_ != null) {
          publicDhKeyBuilder_.dispose();
          publicDhKeyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The session public key to send to the initiator
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder getPublicDhKeyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPublicDhKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The session public key to send to the initiator
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      public com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder getPublicDhKeyOrBuilder() {
        if (publicDhKeyBuilder_ != null) {
          return publicDhKeyBuilder_.getMessageOrBuilder();
        } else {
          return publicDhKey_ == null ?
              com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.getDefaultInstance() : publicDhKey_;
        }
      }
      /**
       * <pre>
       * The session public key to send to the initiator
       * </pre>
       *
       * <code>optional .securemessage.GenericPublicKey public_dh_key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder> 
          getPublicDhKeyFieldBuilder() {
        if (publicDhKeyBuilder_ == null) {
          publicDhKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKey.Builder, com.google.security.cryptauth.lib.securemessage.SecureMessageProto.GenericPublicKeyOrBuilder>(
                  getPublicDhKey(),
                  getParentForChildren(),
                  isClean());
          publicDhKey_ = null;
        }
        return publicDhKeyBuilder_;
      }

      private int protocolVersion_ ;
      /**
       * <pre>
       * The protocol version
       * </pre>
       *
       * <code>optional int32 protocol_version = 2 [default = 0];</code>
       * @return Whether the protocolVersion field is set.
       */
      @java.lang.Override
      public boolean hasProtocolVersion() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The protocol version
       * </pre>
       *
       * <code>optional int32 protocol_version = 2 [default = 0];</code>
       * @return The protocolVersion.
       */
      @java.lang.Override
      public int getProtocolVersion() {
        return protocolVersion_;
      }
      /**
       * <pre>
       * The protocol version
       * </pre>
       *
       * <code>optional int32 protocol_version = 2 [default = 0];</code>
       * @param value The protocolVersion to set.
       * @return This builder for chaining.
       */
      public Builder setProtocolVersion(int value) {

        protocolVersion_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The protocol version
       * </pre>
       *
       * <code>optional int32 protocol_version = 2 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearProtocolVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        protocolVersion_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.ResponderHello)
    }

    // @@protoc_insertion_point(class_scope:securegcm.ResponderHello)
    private static final com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello();
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponderHello>
        PARSER = new com.google.protobuf.AbstractParser<ResponderHello>() {
      @java.lang.Override
      public ResponderHello parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ResponderHello> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponderHello> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.ResponderHello getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EcPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.EcPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .securegcm.Curve curve = 1;</code>
     * @return Whether the curve field is set.
     */
    boolean hasCurve();
    /**
     * <code>required .securegcm.Curve curve = 1;</code>
     * @return The curve.
     */
    com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve getCurve();

    /**
     * <pre>
     * x and y are encoded in big-endian two's complement
     * client MUST verify (x,y) is a valid point on the specified curve
     * </pre>
     *
     * <code>required bytes x = 2;</code>
     * @return Whether the x field is set.
     */
    boolean hasX();
    /**
     * <pre>
     * x and y are encoded in big-endian two's complement
     * client MUST verify (x,y) is a valid point on the specified curve
     * </pre>
     *
     * <code>required bytes x = 2;</code>
     * @return The x.
     */
    com.google.protobuf.ByteString getX();

    /**
     * <code>required bytes y = 3;</code>
     * @return Whether the y field is set.
     */
    boolean hasY();
    /**
     * <code>required bytes y = 3;</code>
     * @return The y.
     */
    com.google.protobuf.ByteString getY();
  }
  /**
   * <pre>
   * A convenience proto for encoding curve points in affine representation
   * </pre>
   *
   * Protobuf type {@code securegcm.EcPoint}
   */
  public static final class EcPoint extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.EcPoint)
      EcPointOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        EcPoint.class.getName());
    }
    // Use EcPoint.newBuilder() to construct.
    private EcPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private EcPoint() {
      curve_ = 1;
      x_ = com.google.protobuf.ByteString.EMPTY;
      y_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_EcPoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_EcPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.Builder.class);
    }

    private int bitField0_;
    public static final int CURVE_FIELD_NUMBER = 1;
    private int curve_ = 1;
    /**
     * <code>required .securegcm.Curve curve = 1;</code>
     * @return Whether the curve field is set.
     */
    @java.lang.Override public boolean hasCurve() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .securegcm.Curve curve = 1;</code>
     * @return The curve.
     */
    @java.lang.Override public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve getCurve() {
      com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve result = com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve.forNumber(curve_);
      return result == null ? com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve.ED_25519 : result;
    }

    public static final int X_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString x_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * x and y are encoded in big-endian two's complement
     * client MUST verify (x,y) is a valid point on the specified curve
     * </pre>
     *
     * <code>required bytes x = 2;</code>
     * @return Whether the x field is set.
     */
    @java.lang.Override
    public boolean hasX() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * x and y are encoded in big-endian two's complement
     * client MUST verify (x,y) is a valid point on the specified curve
     * </pre>
     *
     * <code>required bytes x = 2;</code>
     * @return The x.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString y_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>required bytes y = 3;</code>
     * @return Whether the y field is set.
     */
    @java.lang.Override
    public boolean hasY() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required bytes y = 3;</code>
     * @return The y.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCurve()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, curve_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, x_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(3, y_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, curve_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, x_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint other = (com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint) obj;

      if (hasCurve() != other.hasCurve()) return false;
      if (hasCurve()) {
        if (curve_ != other.curve_) return false;
      }
      if (hasX() != other.hasX()) return false;
      if (hasX()) {
        if (!getX()
            .equals(other.getX())) return false;
      }
      if (hasY() != other.hasY()) return false;
      if (hasY()) {
        if (!getY()
            .equals(other.getY())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCurve()) {
        hash = (37 * hash) + CURVE_FIELD_NUMBER;
        hash = (53 * hash) + curve_;
      }
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getX().hashCode();
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A convenience proto for encoding curve points in affine representation
     * </pre>
     *
     * Protobuf type {@code securegcm.EcPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.EcPoint)
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_EcPoint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_EcPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        curve_ = 1;
        x_ = com.google.protobuf.ByteString.EMPTY;
        y_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_EcPoint_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint build() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint buildPartial() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint result = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.curve_ = curve_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.x_ = x_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.y_ = y_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint other) {
        if (other == com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.getDefaultInstance()) return this;
        if (other.hasCurve()) {
          setCurve(other.getCurve());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasCurve()) {
          return false;
        }
        if (!hasX()) {
          return false;
        }
        if (!hasY()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve tmpValue =
                    com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  curve_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                x_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                y_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int curve_ = 1;
      /**
       * <code>required .securegcm.Curve curve = 1;</code>
       * @return Whether the curve field is set.
       */
      @java.lang.Override public boolean hasCurve() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .securegcm.Curve curve = 1;</code>
       * @return The curve.
       */
      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve getCurve() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve result = com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve.forNumber(curve_);
        return result == null ? com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve.ED_25519 : result;
      }
      /**
       * <code>required .securegcm.Curve curve = 1;</code>
       * @param value The curve to set.
       * @return This builder for chaining.
       */
      public Builder setCurve(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.Curve value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        curve_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .securegcm.Curve curve = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurve() {
        bitField0_ = (bitField0_ & ~0x00000001);
        curve_ = 1;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString x_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * x and y are encoded in big-endian two's complement
       * client MUST verify (x,y) is a valid point on the specified curve
       * </pre>
       *
       * <code>required bytes x = 2;</code>
       * @return Whether the x field is set.
       */
      @java.lang.Override
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * x and y are encoded in big-endian two's complement
       * client MUST verify (x,y) is a valid point on the specified curve
       * </pre>
       *
       * <code>required bytes x = 2;</code>
       * @return The x.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getX() {
        return x_;
      }
      /**
       * <pre>
       * x and y are encoded in big-endian two's complement
       * client MUST verify (x,y) is a valid point on the specified curve
       * </pre>
       *
       * <code>required bytes x = 2;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        x_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * x and y are encoded in big-endian two's complement
       * client MUST verify (x,y) is a valid point on the specified curve
       * </pre>
       *
       * <code>required bytes x = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = getDefaultInstance().getX();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString y_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes y = 3;</code>
       * @return Whether the y field is set.
       */
      @java.lang.Override
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required bytes y = 3;</code>
       * @return The y.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getY() {
        return y_;
      }
      /**
       * <code>required bytes y = 3;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        y_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes y = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = getDefaultInstance().getY();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.EcPoint)
    }

    // @@protoc_insertion_point(class_scope:securegcm.EcPoint)
    private static final com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint();
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EcPoint>
        PARSER = new com.google.protobuf.AbstractParser<EcPoint>() {
      @java.lang.Override
      public EcPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EcPoint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EcPoint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpakeHandshakeMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.SpakeHandshakeMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Each flow in the protocol bumps this counter
     * </pre>
     *
     * <code>optional int32 flow_number = 1;</code>
     * @return Whether the flowNumber field is set.
     */
    boolean hasFlowNumber();
    /**
     * <pre>
     * Each flow in the protocol bumps this counter
     * </pre>
     *
     * <code>optional int32 flow_number = 1;</code>
     * @return The flowNumber.
     */
    int getFlowNumber();

    /**
     * <pre>
     * Some (but not all) SPAKE flows send a point on an elliptic curve
     * </pre>
     *
     * <code>optional .securegcm.EcPoint ec_point = 2;</code>
     * @return Whether the ecPoint field is set.
     */
    boolean hasEcPoint();
    /**
     * <pre>
     * Some (but not all) SPAKE flows send a point on an elliptic curve
     * </pre>
     *
     * <code>optional .securegcm.EcPoint ec_point = 2;</code>
     * @return The ecPoint.
     */
    com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint getEcPoint();
    /**
     * <pre>
     * Some (but not all) SPAKE flows send a point on an elliptic curve
     * </pre>
     *
     * <code>optional .securegcm.EcPoint ec_point = 2;</code>
     */
    com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPointOrBuilder getEcPointOrBuilder();

    /**
     * <pre>
     * Some (but not all) SPAKE flows send a hash value
     * </pre>
     *
     * <code>optional bytes hash_value = 3;</code>
     * @return Whether the hashValue field is set.
     */
    boolean hasHashValue();
    /**
     * <pre>
     * Some (but not all) SPAKE flows send a hash value
     * </pre>
     *
     * <code>optional bytes hash_value = 3;</code>
     * @return The hashValue.
     */
    com.google.protobuf.ByteString getHashValue();

    /**
     * <pre>
     * The last flow of a SPAKE protocol can send an optional payload,
     * since the key exchange is already complete on the sender's side.
     * </pre>
     *
     * <code>optional bytes payload = 4;</code>
     * @return Whether the payload field is set.
     */
    boolean hasPayload();
    /**
     * <pre>
     * The last flow of a SPAKE protocol can send an optional payload,
     * since the key exchange is already complete on the sender's side.
     * </pre>
     *
     * <code>optional bytes payload = 4;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * Protobuf type {@code securegcm.SpakeHandshakeMessage}
   */
  public static final class SpakeHandshakeMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.SpakeHandshakeMessage)
      SpakeHandshakeMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        SpakeHandshakeMessage.class.getName());
    }
    // Use SpakeHandshakeMessage.newBuilder() to construct.
    private SpakeHandshakeMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SpakeHandshakeMessage() {
      hashValue_ = com.google.protobuf.ByteString.EMPTY;
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_SpakeHandshakeMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_SpakeHandshakeMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage.Builder.class);
    }

    private int bitField0_;
    public static final int FLOW_NUMBER_FIELD_NUMBER = 1;
    private int flowNumber_ = 0;
    /**
     * <pre>
     * Each flow in the protocol bumps this counter
     * </pre>
     *
     * <code>optional int32 flow_number = 1;</code>
     * @return Whether the flowNumber field is set.
     */
    @java.lang.Override
    public boolean hasFlowNumber() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Each flow in the protocol bumps this counter
     * </pre>
     *
     * <code>optional int32 flow_number = 1;</code>
     * @return The flowNumber.
     */
    @java.lang.Override
    public int getFlowNumber() {
      return flowNumber_;
    }

    public static final int EC_POINT_FIELD_NUMBER = 2;
    private com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint ecPoint_;
    /**
     * <pre>
     * Some (but not all) SPAKE flows send a point on an elliptic curve
     * </pre>
     *
     * <code>optional .securegcm.EcPoint ec_point = 2;</code>
     * @return Whether the ecPoint field is set.
     */
    @java.lang.Override
    public boolean hasEcPoint() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Some (but not all) SPAKE flows send a point on an elliptic curve
     * </pre>
     *
     * <code>optional .securegcm.EcPoint ec_point = 2;</code>
     * @return The ecPoint.
     */
    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint getEcPoint() {
      return ecPoint_ == null ? com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.getDefaultInstance() : ecPoint_;
    }
    /**
     * <pre>
     * Some (but not all) SPAKE flows send a point on an elliptic curve
     * </pre>
     *
     * <code>optional .securegcm.EcPoint ec_point = 2;</code>
     */
    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPointOrBuilder getEcPointOrBuilder() {
      return ecPoint_ == null ? com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.getDefaultInstance() : ecPoint_;
    }

    public static final int HASH_VALUE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString hashValue_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Some (but not all) SPAKE flows send a hash value
     * </pre>
     *
     * <code>optional bytes hash_value = 3;</code>
     * @return Whether the hashValue field is set.
     */
    @java.lang.Override
    public boolean hasHashValue() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Some (but not all) SPAKE flows send a hash value
     * </pre>
     *
     * <code>optional bytes hash_value = 3;</code>
     * @return The hashValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getHashValue() {
      return hashValue_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * The last flow of a SPAKE protocol can send an optional payload,
     * since the key exchange is already complete on the sender's side.
     * </pre>
     *
     * <code>optional bytes payload = 4;</code>
     * @return Whether the payload field is set.
     */
    @java.lang.Override
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The last flow of a SPAKE protocol can send an optional payload,
     * since the key exchange is already complete on the sender's side.
     * </pre>
     *
     * <code>optional bytes payload = 4;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasEcPoint()) {
        if (!getEcPoint().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, flowNumber_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getEcPoint());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(3, hashValue_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBytes(4, payload_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, flowNumber_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEcPoint());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, hashValue_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, payload_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage other = (com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage) obj;

      if (hasFlowNumber() != other.hasFlowNumber()) return false;
      if (hasFlowNumber()) {
        if (getFlowNumber()
            != other.getFlowNumber()) return false;
      }
      if (hasEcPoint() != other.hasEcPoint()) return false;
      if (hasEcPoint()) {
        if (!getEcPoint()
            .equals(other.getEcPoint())) return false;
      }
      if (hasHashValue() != other.hasHashValue()) return false;
      if (hasHashValue()) {
        if (!getHashValue()
            .equals(other.getHashValue())) return false;
      }
      if (hasPayload() != other.hasPayload()) return false;
      if (hasPayload()) {
        if (!getPayload()
            .equals(other.getPayload())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFlowNumber()) {
        hash = (37 * hash) + FLOW_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getFlowNumber();
      }
      if (hasEcPoint()) {
        hash = (37 * hash) + EC_POINT_FIELD_NUMBER;
        hash = (53 * hash) + getEcPoint().hashCode();
      }
      if (hasHashValue()) {
        hash = (37 * hash) + HASH_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getHashValue().hashCode();
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code securegcm.SpakeHandshakeMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.SpakeHandshakeMessage)
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_SpakeHandshakeMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_SpakeHandshakeMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage.class, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getEcPointFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        flowNumber_ = 0;
        ecPoint_ = null;
        if (ecPointBuilder_ != null) {
          ecPointBuilder_.dispose();
          ecPointBuilder_ = null;
        }
        hashValue_ = com.google.protobuf.ByteString.EMPTY;
        payload_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.internal_static_securegcm_SpakeHandshakeMessage_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage build() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage buildPartial() {
        com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage result = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.flowNumber_ = flowNumber_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ecPoint_ = ecPointBuilder_ == null
              ? ecPoint_
              : ecPointBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.hashValue_ = hashValue_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.payload_ = payload_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage other) {
        if (other == com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage.getDefaultInstance()) return this;
        if (other.hasFlowNumber()) {
          setFlowNumber(other.getFlowNumber());
        }
        if (other.hasEcPoint()) {
          mergeEcPoint(other.getEcPoint());
        }
        if (other.hasHashValue()) {
          setHashValue(other.getHashValue());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasEcPoint()) {
          if (!getEcPoint().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                flowNumber_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getEcPointFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                hashValue_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                payload_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int flowNumber_ ;
      /**
       * <pre>
       * Each flow in the protocol bumps this counter
       * </pre>
       *
       * <code>optional int32 flow_number = 1;</code>
       * @return Whether the flowNumber field is set.
       */
      @java.lang.Override
      public boolean hasFlowNumber() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Each flow in the protocol bumps this counter
       * </pre>
       *
       * <code>optional int32 flow_number = 1;</code>
       * @return The flowNumber.
       */
      @java.lang.Override
      public int getFlowNumber() {
        return flowNumber_;
      }
      /**
       * <pre>
       * Each flow in the protocol bumps this counter
       * </pre>
       *
       * <code>optional int32 flow_number = 1;</code>
       * @param value The flowNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlowNumber(int value) {

        flowNumber_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each flow in the protocol bumps this counter
       * </pre>
       *
       * <code>optional int32 flow_number = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlowNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        flowNumber_ = 0;
        onChanged();
        return this;
      }

      private com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint ecPoint_;
      private com.google.protobuf.SingleFieldBuilder<
          com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.Builder, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPointOrBuilder> ecPointBuilder_;
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a point on an elliptic curve
       * </pre>
       *
       * <code>optional .securegcm.EcPoint ec_point = 2;</code>
       * @return Whether the ecPoint field is set.
       */
      public boolean hasEcPoint() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a point on an elliptic curve
       * </pre>
       *
       * <code>optional .securegcm.EcPoint ec_point = 2;</code>
       * @return The ecPoint.
       */
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint getEcPoint() {
        if (ecPointBuilder_ == null) {
          return ecPoint_ == null ? com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.getDefaultInstance() : ecPoint_;
        } else {
          return ecPointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a point on an elliptic curve
       * </pre>
       *
       * <code>optional .securegcm.EcPoint ec_point = 2;</code>
       */
      public Builder setEcPoint(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint value) {
        if (ecPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ecPoint_ = value;
        } else {
          ecPointBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a point on an elliptic curve
       * </pre>
       *
       * <code>optional .securegcm.EcPoint ec_point = 2;</code>
       */
      public Builder setEcPoint(
          com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.Builder builderForValue) {
        if (ecPointBuilder_ == null) {
          ecPoint_ = builderForValue.build();
        } else {
          ecPointBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a point on an elliptic curve
       * </pre>
       *
       * <code>optional .securegcm.EcPoint ec_point = 2;</code>
       */
      public Builder mergeEcPoint(com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint value) {
        if (ecPointBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            ecPoint_ != null &&
            ecPoint_ != com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.getDefaultInstance()) {
            getEcPointBuilder().mergeFrom(value);
          } else {
            ecPoint_ = value;
          }
        } else {
          ecPointBuilder_.mergeFrom(value);
        }
        if (ecPoint_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a point on an elliptic curve
       * </pre>
       *
       * <code>optional .securegcm.EcPoint ec_point = 2;</code>
       */
      public Builder clearEcPoint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ecPoint_ = null;
        if (ecPointBuilder_ != null) {
          ecPointBuilder_.dispose();
          ecPointBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a point on an elliptic curve
       * </pre>
       *
       * <code>optional .securegcm.EcPoint ec_point = 2;</code>
       */
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.Builder getEcPointBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEcPointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a point on an elliptic curve
       * </pre>
       *
       * <code>optional .securegcm.EcPoint ec_point = 2;</code>
       */
      public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPointOrBuilder getEcPointOrBuilder() {
        if (ecPointBuilder_ != null) {
          return ecPointBuilder_.getMessageOrBuilder();
        } else {
          return ecPoint_ == null ?
              com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.getDefaultInstance() : ecPoint_;
        }
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a point on an elliptic curve
       * </pre>
       *
       * <code>optional .securegcm.EcPoint ec_point = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.Builder, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPointOrBuilder> 
          getEcPointFieldBuilder() {
        if (ecPointBuilder_ == null) {
          ecPointBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPoint.Builder, com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.EcPointOrBuilder>(
                  getEcPoint(),
                  getParentForChildren(),
                  isClean());
          ecPoint_ = null;
        }
        return ecPointBuilder_;
      }

      private com.google.protobuf.ByteString hashValue_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a hash value
       * </pre>
       *
       * <code>optional bytes hash_value = 3;</code>
       * @return Whether the hashValue field is set.
       */
      @java.lang.Override
      public boolean hasHashValue() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a hash value
       * </pre>
       *
       * <code>optional bytes hash_value = 3;</code>
       * @return The hashValue.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getHashValue() {
        return hashValue_;
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a hash value
       * </pre>
       *
       * <code>optional bytes hash_value = 3;</code>
       * @param value The hashValue to set.
       * @return This builder for chaining.
       */
      public Builder setHashValue(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        hashValue_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Some (but not all) SPAKE flows send a hash value
       * </pre>
       *
       * <code>optional bytes hash_value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHashValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hashValue_ = getDefaultInstance().getHashValue();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The last flow of a SPAKE protocol can send an optional payload,
       * since the key exchange is already complete on the sender's side.
       * </pre>
       *
       * <code>optional bytes payload = 4;</code>
       * @return Whether the payload field is set.
       */
      @java.lang.Override
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The last flow of a SPAKE protocol can send an optional payload,
       * since the key exchange is already complete on the sender's side.
       * </pre>
       *
       * <code>optional bytes payload = 4;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * The last flow of a SPAKE protocol can send an optional payload,
       * since the key exchange is already complete on the sender's side.
       * </pre>
       *
       * <code>optional bytes payload = 4;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        payload_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The last flow of a SPAKE protocol can send an optional payload,
       * since the key exchange is already complete on the sender's side.
       * </pre>
       *
       * <code>optional bytes payload = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000008);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.SpakeHandshakeMessage)
    }

    // @@protoc_insertion_point(class_scope:securegcm.SpakeHandshakeMessage)
    private static final com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage();
    }

    public static com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpakeHandshakeMessage>
        PARSER = new com.google.protobuf.AbstractParser<SpakeHandshakeMessage>() {
      @java.lang.Override
      public SpakeHandshakeMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SpakeHandshakeMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpakeHandshakeMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.DeviceToDeviceMessagesProto.SpakeHandshakeMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_DeviceToDeviceMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_DeviceToDeviceMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_InitiatorHello_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_InitiatorHello_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_ResponderHello_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_ResponderHello_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_EcPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_EcPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_SpakeHandshakeMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_SpakeHandshakeMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037device_to_device_messages.proto\022\tsecur" +
      "egcm\032\023securemessage.proto\"A\n\025DeviceToDev" +
      "iceMessage\022\017\n\007message\030\001 \001(\014\022\027\n\017sequence_" +
      "number\030\002 \001(\005\"e\n\016InitiatorHello\0226\n\rpublic" +
      "_dh_key\030\001 \001(\0132\037.securemessage.GenericPub" +
      "licKey\022\033\n\020protocol_version\030\002 \001(\005:\0010\"e\n\016R" +
      "esponderHello\0226\n\rpublic_dh_key\030\001 \001(\0132\037.s" +
      "ecuremessage.GenericPublicKey\022\033\n\020protoco" +
      "l_version\030\002 \001(\005:\0010\"@\n\007EcPoint\022\037\n\005curve\030\001" +
      " \002(\0162\020.securegcm.Curve\022\t\n\001x\030\002 \002(\014\022\t\n\001y\030\003" +
      " \002(\014\"w\n\025SpakeHandshakeMessage\022\023\n\013flow_nu" +
      "mber\030\001 \001(\005\022$\n\010ec_point\030\002 \001(\0132\022.securegcm" +
      ".EcPoint\022\022\n\nhash_value\030\003 \001(\014\022\017\n\007payload\030" +
      "\004 \001(\014*\025\n\005Curve\022\014\n\010ED_25519\020\001BS\n+com.goog" +
      "le.security.cryptauth.lib.securegcmB\033Dev" +
      "iceToDeviceMessagesProtoH\003\242\002\004SGCM"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.security.cryptauth.lib.securemessage.SecureMessageProto.getDescriptor(),
        });
    internal_static_securegcm_DeviceToDeviceMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_securegcm_DeviceToDeviceMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_DeviceToDeviceMessage_descriptor,
        new java.lang.String[] { "Message", "SequenceNumber", });
    internal_static_securegcm_InitiatorHello_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_securegcm_InitiatorHello_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_InitiatorHello_descriptor,
        new java.lang.String[] { "PublicDhKey", "ProtocolVersion", });
    internal_static_securegcm_ResponderHello_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_securegcm_ResponderHello_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_ResponderHello_descriptor,
        new java.lang.String[] { "PublicDhKey", "ProtocolVersion", });
    internal_static_securegcm_EcPoint_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_securegcm_EcPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_EcPoint_descriptor,
        new java.lang.String[] { "Curve", "X", "Y", });
    internal_static_securegcm_SpakeHandshakeMessage_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_securegcm_SpakeHandshakeMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_SpakeHandshakeMessage_descriptor,
        new java.lang.String[] { "FlowNumber", "EcPoint", "HashValue", "Payload", });
    descriptor.resolveAllFeaturesImmutable();
    com.google.security.cryptauth.lib.securemessage.SecureMessageProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
