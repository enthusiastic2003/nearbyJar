// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ukey.proto
// Protobuf Java Version: 4.26.1

package com.google.security.cryptauth.lib.securegcm;

public final class UkeyProto {
  private UkeyProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      UkeyProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code securegcm.Ukey2HandshakeCipher}
   */
  public enum Ukey2HandshakeCipher
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESERVED = 0;</code>
     */
    RESERVED(0),
    /**
     * <pre>
     * NIST P-256 used for ECDH, SHA512 used for
     * </pre>
     *
     * <code>P256_SHA512 = 100;</code>
     */
    P256_SHA512(100),
    /**
     * <pre>
     * commitment
     * </pre>
     *
     * <code>CURVE25519_SHA512 = 200;</code>
     */
    CURVE25519_SHA512(200),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Ukey2HandshakeCipher.class.getName());
    }
    /**
     * <code>RESERVED = 0;</code>
     */
    public static final int RESERVED_VALUE = 0;
    /**
     * <pre>
     * NIST P-256 used for ECDH, SHA512 used for
     * </pre>
     *
     * <code>P256_SHA512 = 100;</code>
     */
    public static final int P256_SHA512_VALUE = 100;
    /**
     * <pre>
     * commitment
     * </pre>
     *
     * <code>CURVE25519_SHA512 = 200;</code>
     */
    public static final int CURVE25519_SHA512_VALUE = 200;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Ukey2HandshakeCipher valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Ukey2HandshakeCipher forNumber(int value) {
      switch (value) {
        case 0: return RESERVED;
        case 100: return P256_SHA512;
        case 200: return CURVE25519_SHA512;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Ukey2HandshakeCipher>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Ukey2HandshakeCipher> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Ukey2HandshakeCipher>() {
            public Ukey2HandshakeCipher findValueByNumber(int number) {
              return Ukey2HandshakeCipher.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final Ukey2HandshakeCipher[] VALUES = values();

    public static Ukey2HandshakeCipher valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Ukey2HandshakeCipher(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:securegcm.Ukey2HandshakeCipher)
  }

  public interface Ukey2MessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.Ukey2Message)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Identifies message type
     * </pre>
     *
     * <code>optional .securegcm.Ukey2Message.Type message_type = 1;</code>
     * @return Whether the messageType field is set.
     */
    boolean hasMessageType();
    /**
     * <pre>
     * Identifies message type
     * </pre>
     *
     * <code>optional .securegcm.Ukey2Message.Type message_type = 1;</code>
     * @return The messageType.
     */
    com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type getMessageType();

    /**
     * <pre>
     * Actual message, to be parsed according to
     * </pre>
     *
     * <code>optional bytes message_data = 2;</code>
     * @return Whether the messageData field is set.
     */
    boolean hasMessageData();
    /**
     * <pre>
     * Actual message, to be parsed according to
     * </pre>
     *
     * <code>optional bytes message_data = 2;</code>
     * @return The messageData.
     */
    com.google.protobuf.ByteString getMessageData();
  }
  /**
   * Protobuf type {@code securegcm.Ukey2Message}
   */
  public static final class Ukey2Message extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.Ukey2Message)
      Ukey2MessageOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Ukey2Message.class.getName());
    }
    // Use Ukey2Message.newBuilder() to construct.
    private Ukey2Message(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Ukey2Message() {
      messageType_ = 0;
      messageData_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Message_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Builder.class);
    }

    /**
     * Protobuf enum {@code securegcm.Ukey2Message.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_DO_NOT_USE = 0;</code>
       */
      UNKNOWN_DO_NOT_USE(0),
      /**
       * <code>ALERT = 1;</code>
       */
      ALERT(1),
      /**
       * <code>CLIENT_INIT = 2;</code>
       */
      CLIENT_INIT(2),
      /**
       * <code>SERVER_INIT = 3;</code>
       */
      SERVER_INIT(3),
      /**
       * <code>CLIENT_FINISH = 4;</code>
       */
      CLIENT_FINISH(4),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          Type.class.getName());
      }
      /**
       * <code>UNKNOWN_DO_NOT_USE = 0;</code>
       */
      public static final int UNKNOWN_DO_NOT_USE_VALUE = 0;
      /**
       * <code>ALERT = 1;</code>
       */
      public static final int ALERT_VALUE = 1;
      /**
       * <code>CLIENT_INIT = 2;</code>
       */
      public static final int CLIENT_INIT_VALUE = 2;
      /**
       * <code>SERVER_INIT = 3;</code>
       */
      public static final int SERVER_INIT_VALUE = 3;
      /**
       * <code>CLIENT_FINISH = 4;</code>
       */
      public static final int CLIENT_FINISH_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_DO_NOT_USE;
          case 1: return ALERT;
          case 2: return CLIENT_INIT;
          case 3: return SERVER_INIT;
          case 4: return CLIENT_FINISH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:securegcm.Ukey2Message.Type)
    }

    private int bitField0_;
    public static final int MESSAGE_TYPE_FIELD_NUMBER = 1;
    private int messageType_ = 0;
    /**
     * <pre>
     * Identifies message type
     * </pre>
     *
     * <code>optional .securegcm.Ukey2Message.Type message_type = 1;</code>
     * @return Whether the messageType field is set.
     */
    @java.lang.Override public boolean hasMessageType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Identifies message type
     * </pre>
     *
     * <code>optional .securegcm.Ukey2Message.Type message_type = 1;</code>
     * @return The messageType.
     */
    @java.lang.Override public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type getMessageType() {
      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type result = com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type.forNumber(messageType_);
      return result == null ? com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type.UNKNOWN_DO_NOT_USE : result;
    }

    public static final int MESSAGE_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString messageData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Actual message, to be parsed according to
     * </pre>
     *
     * <code>optional bytes message_data = 2;</code>
     * @return Whether the messageData field is set.
     */
    @java.lang.Override
    public boolean hasMessageData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Actual message, to be parsed according to
     * </pre>
     *
     * <code>optional bytes message_data = 2;</code>
     * @return The messageData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMessageData() {
      return messageData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, messageType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, messageData_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, messageData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message other = (com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message) obj;

      if (hasMessageType() != other.hasMessageType()) return false;
      if (hasMessageType()) {
        if (messageType_ != other.messageType_) return false;
      }
      if (hasMessageData() != other.hasMessageData()) return false;
      if (hasMessageData()) {
        if (!getMessageData()
            .equals(other.getMessageData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMessageType()) {
        hash = (37 * hash) + MESSAGE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + messageType_;
      }
      if (hasMessageData()) {
        hash = (37 * hash) + MESSAGE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMessageData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code securegcm.Ukey2Message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.Ukey2Message)
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2MessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Message_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        messageType_ = 0;
        messageData_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Message_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message build() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message buildPartial() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message result = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.messageType_ = messageType_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.messageData_ = messageData_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message other) {
        if (other == com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.getDefaultInstance()) return this;
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasMessageData()) {
          setMessageData(other.getMessageData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type tmpValue =
                    com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  messageType_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                messageData_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int messageType_ = 0;
      /**
       * <pre>
       * Identifies message type
       * </pre>
       *
       * <code>optional .securegcm.Ukey2Message.Type message_type = 1;</code>
       * @return Whether the messageType field is set.
       */
      @java.lang.Override public boolean hasMessageType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Identifies message type
       * </pre>
       *
       * <code>optional .securegcm.Ukey2Message.Type message_type = 1;</code>
       * @return The messageType.
       */
      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type getMessageType() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type result = com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type.forNumber(messageType_);
        return result == null ? com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type.UNKNOWN_DO_NOT_USE : result;
      }
      /**
       * <pre>
       * Identifies message type
       * </pre>
       *
       * <code>optional .securegcm.Ukey2Message.Type message_type = 1;</code>
       * @param value The messageType to set.
       * @return This builder for chaining.
       */
      public Builder setMessageType(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        messageType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies message type
       * </pre>
       *
       * <code>optional .securegcm.Ukey2Message.Type message_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString messageData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Actual message, to be parsed according to
       * </pre>
       *
       * <code>optional bytes message_data = 2;</code>
       * @return Whether the messageData field is set.
       */
      @java.lang.Override
      public boolean hasMessageData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Actual message, to be parsed according to
       * </pre>
       *
       * <code>optional bytes message_data = 2;</code>
       * @return The messageData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMessageData() {
        return messageData_;
      }
      /**
       * <pre>
       * Actual message, to be parsed according to
       * </pre>
       *
       * <code>optional bytes message_data = 2;</code>
       * @param value The messageData to set.
       * @return This builder for chaining.
       */
      public Builder setMessageData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        messageData_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Actual message, to be parsed according to
       * </pre>
       *
       * <code>optional bytes message_data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        messageData_ = getDefaultInstance().getMessageData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.Ukey2Message)
    }

    // @@protoc_insertion_point(class_scope:securegcm.Ukey2Message)
    private static final com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message();
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ukey2Message>
        PARSER = new com.google.protobuf.AbstractParser<Ukey2Message>() {
      @java.lang.Override
      public Ukey2Message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Ukey2Message> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ukey2Message> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Message getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Ukey2AlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.Ukey2Alert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .securegcm.Ukey2Alert.AlertType type = 1;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>optional .securegcm.Ukey2Alert.AlertType type = 1;</code>
     * @return The type.
     */
    com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType getType();

    /**
     * <code>optional string error_message = 2;</code>
     * @return Whether the errorMessage field is set.
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string error_message = 2;</code>
     * @return The errorMessage.
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string error_message = 2;</code>
     * @return The bytes for errorMessage.
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();
  }
  /**
   * Protobuf type {@code securegcm.Ukey2Alert}
   */
  public static final class Ukey2Alert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.Ukey2Alert)
      Ukey2AlertOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Ukey2Alert.class.getName());
    }
    // Use Ukey2Alert.newBuilder() to construct.
    private Ukey2Alert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Ukey2Alert() {
      type_ = 1;
      errorMessage_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Alert_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Alert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.Builder.class);
    }

    /**
     * Protobuf enum {@code securegcm.Ukey2Alert.AlertType}
     */
    public enum AlertType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Framing errors
       * </pre>
       *
       * <code>BAD_MESSAGE = 1;</code>
       */
      BAD_MESSAGE(1),
      /**
       * <pre>
       * message_type has an undefined value
       * </pre>
       *
       * <code>BAD_MESSAGE_TYPE = 2;</code>
       */
      BAD_MESSAGE_TYPE(2),
      /**
       * <pre>
       * message_type received does not correspond to
       * </pre>
       *
       * <code>INCORRECT_MESSAGE = 3;</code>
       */
      INCORRECT_MESSAGE(3),
      /**
       * <pre>
       * expected type at this stage of the protocol
       * </pre>
       *
       * <code>BAD_MESSAGE_DATA = 4;</code>
       */
      BAD_MESSAGE_DATA(4),
      /**
       * <pre>
       * ClientInit and ServerInit errors
       * </pre>
       *
       * <code>BAD_VERSION = 100;</code>
       */
      BAD_VERSION(100),
      /**
       * <pre>
       * suitable version to speak with client.
       * </pre>
       *
       * <code>BAD_RANDOM = 101;</code>
       */
      BAD_RANDOM(101),
      /**
       * <pre>
       * length
       * </pre>
       *
       * <code>BAD_HANDSHAKE_CIPHER = 102;</code>
       */
      BAD_HANDSHAKE_CIPHER(102),
      /**
       * <pre>
       * The next protocol is missing, unknown, or
       * </pre>
       *
       * <code>BAD_NEXT_PROTOCOL = 103;</code>
       */
      BAD_NEXT_PROTOCOL(103),
      /**
       * <pre>
       * unsupported
       * </pre>
       *
       * <code>BAD_PUBLIC_KEY = 104;</code>
       */
      BAD_PUBLIC_KEY(104),
      /**
       * <pre>
       * Other errors
       * </pre>
       *
       * <code>INTERNAL_ERROR = 200;</code>
       */
      INTERNAL_ERROR(200),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          AlertType.class.getName());
      }
      /**
       * <pre>
       * Framing errors
       * </pre>
       *
       * <code>BAD_MESSAGE = 1;</code>
       */
      public static final int BAD_MESSAGE_VALUE = 1;
      /**
       * <pre>
       * message_type has an undefined value
       * </pre>
       *
       * <code>BAD_MESSAGE_TYPE = 2;</code>
       */
      public static final int BAD_MESSAGE_TYPE_VALUE = 2;
      /**
       * <pre>
       * message_type received does not correspond to
       * </pre>
       *
       * <code>INCORRECT_MESSAGE = 3;</code>
       */
      public static final int INCORRECT_MESSAGE_VALUE = 3;
      /**
       * <pre>
       * expected type at this stage of the protocol
       * </pre>
       *
       * <code>BAD_MESSAGE_DATA = 4;</code>
       */
      public static final int BAD_MESSAGE_DATA_VALUE = 4;
      /**
       * <pre>
       * ClientInit and ServerInit errors
       * </pre>
       *
       * <code>BAD_VERSION = 100;</code>
       */
      public static final int BAD_VERSION_VALUE = 100;
      /**
       * <pre>
       * suitable version to speak with client.
       * </pre>
       *
       * <code>BAD_RANDOM = 101;</code>
       */
      public static final int BAD_RANDOM_VALUE = 101;
      /**
       * <pre>
       * length
       * </pre>
       *
       * <code>BAD_HANDSHAKE_CIPHER = 102;</code>
       */
      public static final int BAD_HANDSHAKE_CIPHER_VALUE = 102;
      /**
       * <pre>
       * The next protocol is missing, unknown, or
       * </pre>
       *
       * <code>BAD_NEXT_PROTOCOL = 103;</code>
       */
      public static final int BAD_NEXT_PROTOCOL_VALUE = 103;
      /**
       * <pre>
       * unsupported
       * </pre>
       *
       * <code>BAD_PUBLIC_KEY = 104;</code>
       */
      public static final int BAD_PUBLIC_KEY_VALUE = 104;
      /**
       * <pre>
       * Other errors
       * </pre>
       *
       * <code>INTERNAL_ERROR = 200;</code>
       */
      public static final int INTERNAL_ERROR_VALUE = 200;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AlertType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static AlertType forNumber(int value) {
        switch (value) {
          case 1: return BAD_MESSAGE;
          case 2: return BAD_MESSAGE_TYPE;
          case 3: return INCORRECT_MESSAGE;
          case 4: return BAD_MESSAGE_DATA;
          case 100: return BAD_VERSION;
          case 101: return BAD_RANDOM;
          case 102: return BAD_HANDSHAKE_CIPHER;
          case 103: return BAD_NEXT_PROTOCOL;
          case 104: return BAD_PUBLIC_KEY;
          case 200: return INTERNAL_ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AlertType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AlertType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AlertType>() {
              public AlertType findValueByNumber(int number) {
                return AlertType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.getDescriptor().getEnumTypes().get(0);
      }

      private static final AlertType[] VALUES = values();

      public static AlertType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AlertType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:securegcm.Ukey2Alert.AlertType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 1;
    /**
     * <code>optional .securegcm.Ukey2Alert.AlertType type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .securegcm.Ukey2Alert.AlertType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType getType() {
      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType result = com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType.forNumber(type_);
      return result == null ? com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType.BAD_MESSAGE : result;
    }

    public static final int ERROR_MESSAGE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object errorMessage_ = "";
    /**
     * <code>optional string error_message = 2;</code>
     * @return Whether the errorMessage field is set.
     */
    @java.lang.Override
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string error_message = 2;</code>
     * @return The errorMessage.
     */
    @java.lang.Override
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string error_message = 2;</code>
     * @return The bytes for errorMessage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, errorMessage_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, errorMessage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert other = (com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (type_ != other.type_) return false;
      }
      if (hasErrorMessage() != other.hasErrorMessage()) return false;
      if (hasErrorMessage()) {
        if (!getErrorMessage()
            .equals(other.getErrorMessage())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasErrorMessage()) {
        hash = (37 * hash) + ERROR_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getErrorMessage().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code securegcm.Ukey2Alert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.Ukey2Alert)
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2AlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Alert_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Alert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 1;
        errorMessage_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2Alert_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert build() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert buildPartial() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert result = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.errorMessage_ = errorMessage_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert other) {
        if (other == com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasErrorMessage()) {
          errorMessage_ = other.errorMessage_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType tmpValue =
                    com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  type_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                errorMessage_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 1;
      /**
       * <code>optional .securegcm.Ukey2Alert.AlertType type = 1;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .securegcm.Ukey2Alert.AlertType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType getType() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType result = com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType.forNumber(type_);
        return result == null ? com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType.BAD_MESSAGE : result;
      }
      /**
       * <code>optional .securegcm.Ukey2Alert.AlertType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert.AlertType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .securegcm.Ukey2Alert.AlertType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 1;
        onChanged();
        return this;
      }

      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string error_message = 2;</code>
       * @return Whether the errorMessage field is set.
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string error_message = 2;</code>
       * @return The errorMessage.
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            errorMessage_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string error_message = 2;</code>
       * @return The bytes for errorMessage.
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string error_message = 2;</code>
       * @param value The errorMessage to set.
       * @return This builder for chaining.
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        errorMessage_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string error_message = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorMessage() {
        errorMessage_ = getDefaultInstance().getErrorMessage();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string error_message = 2;</code>
       * @param value The bytes for errorMessage to set.
       * @return This builder for chaining.
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        errorMessage_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.Ukey2Alert)
    }

    // @@protoc_insertion_point(class_scope:securegcm.Ukey2Alert)
    private static final com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert();
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ukey2Alert>
        PARSER = new com.google.protobuf.AbstractParser<Ukey2Alert>() {
      @java.lang.Override
      public Ukey2Alert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Ukey2Alert> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ukey2Alert> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2Alert getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Ukey2ClientInitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.Ukey2ClientInit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * highest supported version for rollback
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <pre>
     * highest supported version for rollback
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     * protection
     * </pre>
     *
     * <code>optional bytes random = 2;</code>
     * @return Whether the random field is set.
     */
    boolean hasRandom();
    /**
     * <pre>
     * protection
     * </pre>
     *
     * <code>optional bytes random = 2;</code>
     * @return The random.
     */
    com.google.protobuf.ByteString getRandom();

    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    java.util.List<com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment> 
        getCipherCommitmentsList();
    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment getCipherCommitments(int index);
    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    int getCipherCommitmentsCount();
    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    java.util.List<? extends com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder> 
        getCipherCommitmentsOrBuilderList();
    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder getCipherCommitmentsOrBuilder(
        int index);

    /**
     * <pre>
     * Next protocol that the client wants to speak.
     * </pre>
     *
     * <code>optional string next_protocol = 4;</code>
     * @return Whether the nextProtocol field is set.
     */
    boolean hasNextProtocol();
    /**
     * <pre>
     * Next protocol that the client wants to speak.
     * </pre>
     *
     * <code>optional string next_protocol = 4;</code>
     * @return The nextProtocol.
     */
    java.lang.String getNextProtocol();
    /**
     * <pre>
     * Next protocol that the client wants to speak.
     * </pre>
     *
     * <code>optional string next_protocol = 4;</code>
     * @return The bytes for nextProtocol.
     */
    com.google.protobuf.ByteString
        getNextProtocolBytes();
  }
  /**
   * Protobuf type {@code securegcm.Ukey2ClientInit}
   */
  public static final class Ukey2ClientInit extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.Ukey2ClientInit)
      Ukey2ClientInitOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Ukey2ClientInit.class.getName());
    }
    // Use Ukey2ClientInit.newBuilder() to construct.
    private Ukey2ClientInit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Ukey2ClientInit() {
      random_ = com.google.protobuf.ByteString.EMPTY;
      cipherCommitments_ = java.util.Collections.emptyList();
      nextProtocol_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.Builder.class);
    }

    public interface CipherCommitmentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:securegcm.Ukey2ClientInit.CipherCommitment)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 1;</code>
       * @return Whether the handshakeCipher field is set.
       */
      boolean hasHandshakeCipher();
      /**
       * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 1;</code>
       * @return The handshakeCipher.
       */
      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher getHandshakeCipher();

      /**
       * <code>optional bytes commitment = 2;</code>
       * @return Whether the commitment field is set.
       */
      boolean hasCommitment();
      /**
       * <code>optional bytes commitment = 2;</code>
       * @return The commitment.
       */
      com.google.protobuf.ByteString getCommitment();
    }
    /**
     * <pre>
     * One commitment (hash of ClientFinished containing public key) per supported
     * cipher
     * </pre>
     *
     * Protobuf type {@code securegcm.Ukey2ClientInit.CipherCommitment}
     */
    public static final class CipherCommitment extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:securegcm.Ukey2ClientInit.CipherCommitment)
        CipherCommitmentOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          CipherCommitment.class.getName());
      }
      // Use CipherCommitment.newBuilder() to construct.
      private CipherCommitment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private CipherCommitment() {
        handshakeCipher_ = 0;
        commitment_ = com.google.protobuf.ByteString.EMPTY;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_CipherCommitment_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_CipherCommitment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder.class);
      }

      private int bitField0_;
      public static final int HANDSHAKE_CIPHER_FIELD_NUMBER = 1;
      private int handshakeCipher_ = 0;
      /**
       * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 1;</code>
       * @return Whether the handshakeCipher field is set.
       */
      @java.lang.Override public boolean hasHandshakeCipher() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 1;</code>
       * @return The handshakeCipher.
       */
      @java.lang.Override public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher getHandshakeCipher() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher result = com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.forNumber(handshakeCipher_);
        return result == null ? com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.RESERVED : result;
      }

      public static final int COMMITMENT_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString commitment_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes commitment = 2;</code>
       * @return Whether the commitment field is set.
       */
      @java.lang.Override
      public boolean hasCommitment() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bytes commitment = 2;</code>
       * @return The commitment.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCommitment() {
        return commitment_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeEnum(1, handshakeCipher_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeBytes(2, commitment_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, handshakeCipher_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, commitment_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment)) {
          return super.equals(obj);
        }
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment other = (com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment) obj;

        if (hasHandshakeCipher() != other.hasHandshakeCipher()) return false;
        if (hasHandshakeCipher()) {
          if (handshakeCipher_ != other.handshakeCipher_) return false;
        }
        if (hasCommitment() != other.hasCommitment()) return false;
        if (hasCommitment()) {
          if (!getCommitment()
              .equals(other.getCommitment())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasHandshakeCipher()) {
          hash = (37 * hash) + HANDSHAKE_CIPHER_FIELD_NUMBER;
          hash = (53 * hash) + handshakeCipher_;
        }
        if (hasCommitment()) {
          hash = (37 * hash) + COMMITMENT_FIELD_NUMBER;
          hash = (53 * hash) + getCommitment().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * One commitment (hash of ClientFinished containing public key) per supported
       * cipher
       * </pre>
       *
       * Protobuf type {@code securegcm.Ukey2ClientInit.CipherCommitment}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:securegcm.Ukey2ClientInit.CipherCommitment)
          com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_CipherCommitment_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_CipherCommitment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder.class);
        }

        // Construct using com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          handshakeCipher_ = 0;
          commitment_ = com.google.protobuf.ByteString.EMPTY;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_CipherCommitment_descriptor;
        }

        @java.lang.Override
        public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment getDefaultInstanceForType() {
          return com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment build() {
          com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment buildPartial() {
          com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment result = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.handshakeCipher_ = handshakeCipher_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.commitment_ = commitment_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment) {
            return mergeFrom((com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment other) {
          if (other == com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.getDefaultInstance()) return this;
          if (other.hasHandshakeCipher()) {
            setHandshakeCipher(other.getHandshakeCipher());
          }
          if (other.hasCommitment()) {
            setCommitment(other.getCommitment());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int tmpRaw = input.readEnum();
                  com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher tmpValue =
                      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(1, tmpRaw);
                  } else {
                    handshakeCipher_ = tmpRaw;
                    bitField0_ |= 0x00000001;
                  }
                  break;
                } // case 8
                case 18: {
                  commitment_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int handshakeCipher_ = 0;
        /**
         * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 1;</code>
         * @return Whether the handshakeCipher field is set.
         */
        @java.lang.Override public boolean hasHandshakeCipher() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 1;</code>
         * @return The handshakeCipher.
         */
        @java.lang.Override
        public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher getHandshakeCipher() {
          com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher result = com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.forNumber(handshakeCipher_);
          return result == null ? com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.RESERVED : result;
        }
        /**
         * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 1;</code>
         * @param value The handshakeCipher to set.
         * @return This builder for chaining.
         */
        public Builder setHandshakeCipher(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          handshakeCipher_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearHandshakeCipher() {
          bitField0_ = (bitField0_ & ~0x00000001);
          handshakeCipher_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString commitment_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes commitment = 2;</code>
         * @return Whether the commitment field is set.
         */
        @java.lang.Override
        public boolean hasCommitment() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional bytes commitment = 2;</code>
         * @return The commitment.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getCommitment() {
          return commitment_;
        }
        /**
         * <code>optional bytes commitment = 2;</code>
         * @param value The commitment to set.
         * @return This builder for chaining.
         */
        public Builder setCommitment(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          commitment_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes commitment = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCommitment() {
          bitField0_ = (bitField0_ & ~0x00000002);
          commitment_ = getDefaultInstance().getCommitment();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:securegcm.Ukey2ClientInit.CipherCommitment)
      }

      // @@protoc_insertion_point(class_scope:securegcm.Ukey2ClientInit.CipherCommitment)
      private static final com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment();
      }

      public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CipherCommitment>
          PARSER = new com.google.protobuf.AbstractParser<CipherCommitment>() {
        @java.lang.Override
        public CipherCommitment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<CipherCommitment> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CipherCommitment> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_ = 0;
    /**
     * <pre>
     * highest supported version for rollback
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * highest supported version for rollback
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int RANDOM_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString random_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * protection
     * </pre>
     *
     * <code>optional bytes random = 2;</code>
     * @return Whether the random field is set.
     */
    @java.lang.Override
    public boolean hasRandom() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * protection
     * </pre>
     *
     * <code>optional bytes random = 2;</code>
     * @return The random.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRandom() {
      return random_;
    }

    public static final int CIPHER_COMMITMENTS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment> cipherCommitments_;
    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment> getCipherCommitmentsList() {
      return cipherCommitments_;
    }
    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder> 
        getCipherCommitmentsOrBuilderList() {
      return cipherCommitments_;
    }
    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    @java.lang.Override
    public int getCipherCommitmentsCount() {
      return cipherCommitments_.size();
    }
    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment getCipherCommitments(int index) {
      return cipherCommitments_.get(index);
    }
    /**
     * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
     */
    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder getCipherCommitmentsOrBuilder(
        int index) {
      return cipherCommitments_.get(index);
    }

    public static final int NEXT_PROTOCOL_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object nextProtocol_ = "";
    /**
     * <pre>
     * Next protocol that the client wants to speak.
     * </pre>
     *
     * <code>optional string next_protocol = 4;</code>
     * @return Whether the nextProtocol field is set.
     */
    @java.lang.Override
    public boolean hasNextProtocol() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Next protocol that the client wants to speak.
     * </pre>
     *
     * <code>optional string next_protocol = 4;</code>
     * @return The nextProtocol.
     */
    @java.lang.Override
    public java.lang.String getNextProtocol() {
      java.lang.Object ref = nextProtocol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nextProtocol_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Next protocol that the client wants to speak.
     * </pre>
     *
     * <code>optional string next_protocol = 4;</code>
     * @return The bytes for nextProtocol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNextProtocolBytes() {
      java.lang.Object ref = nextProtocol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextProtocol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, random_);
      }
      for (int i = 0; i < cipherCommitments_.size(); i++) {
        output.writeMessage(3, cipherCommitments_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, nextProtocol_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, random_);
      }
      for (int i = 0; i < cipherCommitments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, cipherCommitments_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, nextProtocol_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit other = (com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit) obj;

      if (hasVersion() != other.hasVersion()) return false;
      if (hasVersion()) {
        if (getVersion()
            != other.getVersion()) return false;
      }
      if (hasRandom() != other.hasRandom()) return false;
      if (hasRandom()) {
        if (!getRandom()
            .equals(other.getRandom())) return false;
      }
      if (!getCipherCommitmentsList()
          .equals(other.getCipherCommitmentsList())) return false;
      if (hasNextProtocol() != other.hasNextProtocol()) return false;
      if (hasNextProtocol()) {
        if (!getNextProtocol()
            .equals(other.getNextProtocol())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion();
      }
      if (hasRandom()) {
        hash = (37 * hash) + RANDOM_FIELD_NUMBER;
        hash = (53 * hash) + getRandom().hashCode();
      }
      if (getCipherCommitmentsCount() > 0) {
        hash = (37 * hash) + CIPHER_COMMITMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getCipherCommitmentsList().hashCode();
      }
      if (hasNextProtocol()) {
        hash = (37 * hash) + NEXT_PROTOCOL_FIELD_NUMBER;
        hash = (53 * hash) + getNextProtocol().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code securegcm.Ukey2ClientInit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.Ukey2ClientInit)
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        version_ = 0;
        random_ = com.google.protobuf.ByteString.EMPTY;
        if (cipherCommitmentsBuilder_ == null) {
          cipherCommitments_ = java.util.Collections.emptyList();
        } else {
          cipherCommitments_ = null;
          cipherCommitmentsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        nextProtocol_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientInit_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit build() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit buildPartial() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit result = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit result) {
        if (cipherCommitmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            cipherCommitments_ = java.util.Collections.unmodifiableList(cipherCommitments_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.cipherCommitments_ = cipherCommitments_;
        } else {
          result.cipherCommitments_ = cipherCommitmentsBuilder_.build();
        }
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.version_ = version_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.random_ = random_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.nextProtocol_ = nextProtocol_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit other) {
        if (other == com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasRandom()) {
          setRandom(other.getRandom());
        }
        if (cipherCommitmentsBuilder_ == null) {
          if (!other.cipherCommitments_.isEmpty()) {
            if (cipherCommitments_.isEmpty()) {
              cipherCommitments_ = other.cipherCommitments_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureCipherCommitmentsIsMutable();
              cipherCommitments_.addAll(other.cipherCommitments_);
            }
            onChanged();
          }
        } else {
          if (!other.cipherCommitments_.isEmpty()) {
            if (cipherCommitmentsBuilder_.isEmpty()) {
              cipherCommitmentsBuilder_.dispose();
              cipherCommitmentsBuilder_ = null;
              cipherCommitments_ = other.cipherCommitments_;
              bitField0_ = (bitField0_ & ~0x00000004);
              cipherCommitmentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCipherCommitmentsFieldBuilder() : null;
            } else {
              cipherCommitmentsBuilder_.addAllMessages(other.cipherCommitments_);
            }
          }
        }
        if (other.hasNextProtocol()) {
          nextProtocol_ = other.nextProtocol_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                version_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                random_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment m =
                    input.readMessage(
                        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.parser(),
                        extensionRegistry);
                if (cipherCommitmentsBuilder_ == null) {
                  ensureCipherCommitmentsIsMutable();
                  cipherCommitments_.add(m);
                } else {
                  cipherCommitmentsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                nextProtocol_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <pre>
       * highest supported version for rollback
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * highest supported version for rollback
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * highest supported version for rollback
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {

        version_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * highest supported version for rollback
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString random_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * protection
       * </pre>
       *
       * <code>optional bytes random = 2;</code>
       * @return Whether the random field is set.
       */
      @java.lang.Override
      public boolean hasRandom() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * protection
       * </pre>
       *
       * <code>optional bytes random = 2;</code>
       * @return The random.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRandom() {
        return random_;
      }
      /**
       * <pre>
       * protection
       * </pre>
       *
       * <code>optional bytes random = 2;</code>
       * @param value The random to set.
       * @return This builder for chaining.
       */
      public Builder setRandom(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        random_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * protection
       * </pre>
       *
       * <code>optional bytes random = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandom() {
        bitField0_ = (bitField0_ & ~0x00000002);
        random_ = getDefaultInstance().getRandom();
        onChanged();
        return this;
      }

      private java.util.List<com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment> cipherCommitments_ =
        java.util.Collections.emptyList();
      private void ensureCipherCommitmentsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          cipherCommitments_ = new java.util.ArrayList<com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment>(cipherCommitments_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder> cipherCommitmentsBuilder_;

      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public java.util.List<com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment> getCipherCommitmentsList() {
        if (cipherCommitmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cipherCommitments_);
        } else {
          return cipherCommitmentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public int getCipherCommitmentsCount() {
        if (cipherCommitmentsBuilder_ == null) {
          return cipherCommitments_.size();
        } else {
          return cipherCommitmentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment getCipherCommitments(int index) {
        if (cipherCommitmentsBuilder_ == null) {
          return cipherCommitments_.get(index);
        } else {
          return cipherCommitmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public Builder setCipherCommitments(
          int index, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment value) {
        if (cipherCommitmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCipherCommitmentsIsMutable();
          cipherCommitments_.set(index, value);
          onChanged();
        } else {
          cipherCommitmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public Builder setCipherCommitments(
          int index, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder builderForValue) {
        if (cipherCommitmentsBuilder_ == null) {
          ensureCipherCommitmentsIsMutable();
          cipherCommitments_.set(index, builderForValue.build());
          onChanged();
        } else {
          cipherCommitmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public Builder addCipherCommitments(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment value) {
        if (cipherCommitmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCipherCommitmentsIsMutable();
          cipherCommitments_.add(value);
          onChanged();
        } else {
          cipherCommitmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public Builder addCipherCommitments(
          int index, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment value) {
        if (cipherCommitmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCipherCommitmentsIsMutable();
          cipherCommitments_.add(index, value);
          onChanged();
        } else {
          cipherCommitmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public Builder addCipherCommitments(
          com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder builderForValue) {
        if (cipherCommitmentsBuilder_ == null) {
          ensureCipherCommitmentsIsMutable();
          cipherCommitments_.add(builderForValue.build());
          onChanged();
        } else {
          cipherCommitmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public Builder addCipherCommitments(
          int index, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder builderForValue) {
        if (cipherCommitmentsBuilder_ == null) {
          ensureCipherCommitmentsIsMutable();
          cipherCommitments_.add(index, builderForValue.build());
          onChanged();
        } else {
          cipherCommitmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public Builder addAllCipherCommitments(
          java.lang.Iterable<? extends com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment> values) {
        if (cipherCommitmentsBuilder_ == null) {
          ensureCipherCommitmentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cipherCommitments_);
          onChanged();
        } else {
          cipherCommitmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public Builder clearCipherCommitments() {
        if (cipherCommitmentsBuilder_ == null) {
          cipherCommitments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          cipherCommitmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public Builder removeCipherCommitments(int index) {
        if (cipherCommitmentsBuilder_ == null) {
          ensureCipherCommitmentsIsMutable();
          cipherCommitments_.remove(index);
          onChanged();
        } else {
          cipherCommitmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder getCipherCommitmentsBuilder(
          int index) {
        return getCipherCommitmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder getCipherCommitmentsOrBuilder(
          int index) {
        if (cipherCommitmentsBuilder_ == null) {
          return cipherCommitments_.get(index);  } else {
          return cipherCommitmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public java.util.List<? extends com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder> 
           getCipherCommitmentsOrBuilderList() {
        if (cipherCommitmentsBuilder_ != null) {
          return cipherCommitmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cipherCommitments_);
        }
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder addCipherCommitmentsBuilder() {
        return getCipherCommitmentsFieldBuilder().addBuilder(
            com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.getDefaultInstance());
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder addCipherCommitmentsBuilder(
          int index) {
        return getCipherCommitmentsFieldBuilder().addBuilder(
            index, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.getDefaultInstance());
      }
      /**
       * <code>repeated .securegcm.Ukey2ClientInit.CipherCommitment cipher_commitments = 3;</code>
       */
      public java.util.List<com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder> 
           getCipherCommitmentsBuilderList() {
        return getCipherCommitmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder> 
          getCipherCommitmentsFieldBuilder() {
        if (cipherCommitmentsBuilder_ == null) {
          cipherCommitmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitment.Builder, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit.CipherCommitmentOrBuilder>(
                  cipherCommitments_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          cipherCommitments_ = null;
        }
        return cipherCommitmentsBuilder_;
      }

      private java.lang.Object nextProtocol_ = "";
      /**
       * <pre>
       * Next protocol that the client wants to speak.
       * </pre>
       *
       * <code>optional string next_protocol = 4;</code>
       * @return Whether the nextProtocol field is set.
       */
      public boolean hasNextProtocol() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Next protocol that the client wants to speak.
       * </pre>
       *
       * <code>optional string next_protocol = 4;</code>
       * @return The nextProtocol.
       */
      public java.lang.String getNextProtocol() {
        java.lang.Object ref = nextProtocol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nextProtocol_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Next protocol that the client wants to speak.
       * </pre>
       *
       * <code>optional string next_protocol = 4;</code>
       * @return The bytes for nextProtocol.
       */
      public com.google.protobuf.ByteString
          getNextProtocolBytes() {
        java.lang.Object ref = nextProtocol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextProtocol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Next protocol that the client wants to speak.
       * </pre>
       *
       * <code>optional string next_protocol = 4;</code>
       * @param value The nextProtocol to set.
       * @return This builder for chaining.
       */
      public Builder setNextProtocol(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        nextProtocol_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Next protocol that the client wants to speak.
       * </pre>
       *
       * <code>optional string next_protocol = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextProtocol() {
        nextProtocol_ = getDefaultInstance().getNextProtocol();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Next protocol that the client wants to speak.
       * </pre>
       *
       * <code>optional string next_protocol = 4;</code>
       * @param value The bytes for nextProtocol to set.
       * @return This builder for chaining.
       */
      public Builder setNextProtocolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        nextProtocol_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.Ukey2ClientInit)
    }

    // @@protoc_insertion_point(class_scope:securegcm.Ukey2ClientInit)
    private static final com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit();
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ukey2ClientInit>
        PARSER = new com.google.protobuf.AbstractParser<Ukey2ClientInit>() {
      @java.lang.Override
      public Ukey2ClientInit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Ukey2ClientInit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ukey2ClientInit> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientInit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Ukey2ServerInitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.Ukey2ServerInit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * highest supported version for rollback
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <pre>
     * highest supported version for rollback
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     * protection
     * </pre>
     *
     * <code>optional bytes random = 2;</code>
     * @return Whether the random field is set.
     */
    boolean hasRandom();
    /**
     * <pre>
     * protection
     * </pre>
     *
     * <code>optional bytes random = 2;</code>
     * @return The random.
     */
    com.google.protobuf.ByteString getRandom();

    /**
     * <pre>
     * Selected Cipher and corresponding public key
     * </pre>
     *
     * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 3;</code>
     * @return Whether the handshakeCipher field is set.
     */
    boolean hasHandshakeCipher();
    /**
     * <pre>
     * Selected Cipher and corresponding public key
     * </pre>
     *
     * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 3;</code>
     * @return The handshakeCipher.
     */
    com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher getHandshakeCipher();

    /**
     * <code>optional bytes public_key = 4;</code>
     * @return Whether the publicKey field is set.
     */
    boolean hasPublicKey();
    /**
     * <code>optional bytes public_key = 4;</code>
     * @return The publicKey.
     */
    com.google.protobuf.ByteString getPublicKey();
  }
  /**
   * Protobuf type {@code securegcm.Ukey2ServerInit}
   */
  public static final class Ukey2ServerInit extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.Ukey2ServerInit)
      Ukey2ServerInitOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Ukey2ServerInit.class.getName());
    }
    // Use Ukey2ServerInit.newBuilder() to construct.
    private Ukey2ServerInit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Ukey2ServerInit() {
      random_ = com.google.protobuf.ByteString.EMPTY;
      handshakeCipher_ = 0;
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ServerInit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ServerInit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit.Builder.class);
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_ = 0;
    /**
     * <pre>
     * highest supported version for rollback
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * highest supported version for rollback
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int RANDOM_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString random_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * protection
     * </pre>
     *
     * <code>optional bytes random = 2;</code>
     * @return Whether the random field is set.
     */
    @java.lang.Override
    public boolean hasRandom() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * protection
     * </pre>
     *
     * <code>optional bytes random = 2;</code>
     * @return The random.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRandom() {
      return random_;
    }

    public static final int HANDSHAKE_CIPHER_FIELD_NUMBER = 3;
    private int handshakeCipher_ = 0;
    /**
     * <pre>
     * Selected Cipher and corresponding public key
     * </pre>
     *
     * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 3;</code>
     * @return Whether the handshakeCipher field is set.
     */
    @java.lang.Override public boolean hasHandshakeCipher() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Selected Cipher and corresponding public key
     * </pre>
     *
     * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 3;</code>
     * @return The handshakeCipher.
     */
    @java.lang.Override public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher getHandshakeCipher() {
      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher result = com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.forNumber(handshakeCipher_);
      return result == null ? com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.RESERVED : result;
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes public_key = 4;</code>
     * @return Whether the publicKey field is set.
     */
    @java.lang.Override
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bytes public_key = 4;</code>
     * @return The publicKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, random_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(3, handshakeCipher_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBytes(4, publicKey_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, random_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, handshakeCipher_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, publicKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit other = (com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit) obj;

      if (hasVersion() != other.hasVersion()) return false;
      if (hasVersion()) {
        if (getVersion()
            != other.getVersion()) return false;
      }
      if (hasRandom() != other.hasRandom()) return false;
      if (hasRandom()) {
        if (!getRandom()
            .equals(other.getRandom())) return false;
      }
      if (hasHandshakeCipher() != other.hasHandshakeCipher()) return false;
      if (hasHandshakeCipher()) {
        if (handshakeCipher_ != other.handshakeCipher_) return false;
      }
      if (hasPublicKey() != other.hasPublicKey()) return false;
      if (hasPublicKey()) {
        if (!getPublicKey()
            .equals(other.getPublicKey())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion();
      }
      if (hasRandom()) {
        hash = (37 * hash) + RANDOM_FIELD_NUMBER;
        hash = (53 * hash) + getRandom().hashCode();
      }
      if (hasHandshakeCipher()) {
        hash = (37 * hash) + HANDSHAKE_CIPHER_FIELD_NUMBER;
        hash = (53 * hash) + handshakeCipher_;
      }
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code securegcm.Ukey2ServerInit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.Ukey2ServerInit)
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ServerInit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ServerInit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        version_ = 0;
        random_ = com.google.protobuf.ByteString.EMPTY;
        handshakeCipher_ = 0;
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ServerInit_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit build() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit buildPartial() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit result = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.version_ = version_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.random_ = random_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.handshakeCipher_ = handshakeCipher_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.publicKey_ = publicKey_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit other) {
        if (other == com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasRandom()) {
          setRandom(other.getRandom());
        }
        if (other.hasHandshakeCipher()) {
          setHandshakeCipher(other.getHandshakeCipher());
        }
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                version_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                random_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                int tmpRaw = input.readEnum();
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher tmpValue =
                    com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(3, tmpRaw);
                } else {
                  handshakeCipher_ = tmpRaw;
                  bitField0_ |= 0x00000004;
                }
                break;
              } // case 24
              case 34: {
                publicKey_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <pre>
       * highest supported version for rollback
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * highest supported version for rollback
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * highest supported version for rollback
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {

        version_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * highest supported version for rollback
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString random_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * protection
       * </pre>
       *
       * <code>optional bytes random = 2;</code>
       * @return Whether the random field is set.
       */
      @java.lang.Override
      public boolean hasRandom() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * protection
       * </pre>
       *
       * <code>optional bytes random = 2;</code>
       * @return The random.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRandom() {
        return random_;
      }
      /**
       * <pre>
       * protection
       * </pre>
       *
       * <code>optional bytes random = 2;</code>
       * @param value The random to set.
       * @return This builder for chaining.
       */
      public Builder setRandom(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        random_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * protection
       * </pre>
       *
       * <code>optional bytes random = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandom() {
        bitField0_ = (bitField0_ & ~0x00000002);
        random_ = getDefaultInstance().getRandom();
        onChanged();
        return this;
      }

      private int handshakeCipher_ = 0;
      /**
       * <pre>
       * Selected Cipher and corresponding public key
       * </pre>
       *
       * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 3;</code>
       * @return Whether the handshakeCipher field is set.
       */
      @java.lang.Override public boolean hasHandshakeCipher() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Selected Cipher and corresponding public key
       * </pre>
       *
       * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 3;</code>
       * @return The handshakeCipher.
       */
      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher getHandshakeCipher() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher result = com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.forNumber(handshakeCipher_);
        return result == null ? com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher.RESERVED : result;
      }
      /**
       * <pre>
       * Selected Cipher and corresponding public key
       * </pre>
       *
       * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 3;</code>
       * @param value The handshakeCipher to set.
       * @return This builder for chaining.
       */
      public Builder setHandshakeCipher(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2HandshakeCipher value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        handshakeCipher_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Selected Cipher and corresponding public key
       * </pre>
       *
       * <code>optional .securegcm.Ukey2HandshakeCipher handshake_cipher = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHandshakeCipher() {
        bitField0_ = (bitField0_ & ~0x00000004);
        handshakeCipher_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes public_key = 4;</code>
       * @return Whether the publicKey field is set.
       */
      @java.lang.Override
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bytes public_key = 4;</code>
       * @return The publicKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <code>optional bytes public_key = 4;</code>
       * @param value The publicKey to set.
       * @return This builder for chaining.
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        publicKey_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes public_key = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000008);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.Ukey2ServerInit)
    }

    // @@protoc_insertion_point(class_scope:securegcm.Ukey2ServerInit)
    private static final com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit();
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ukey2ServerInit>
        PARSER = new com.google.protobuf.AbstractParser<Ukey2ServerInit>() {
      @java.lang.Override
      public Ukey2ServerInit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Ukey2ServerInit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ukey2ServerInit> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ServerInit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Ukey2ClientFinishedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:securegcm.Ukey2ClientFinished)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * public key matching selected handshake
     * </pre>
     *
     * <code>optional bytes public_key = 1;</code>
     * @return Whether the publicKey field is set.
     */
    boolean hasPublicKey();
    /**
     * <pre>
     * public key matching selected handshake
     * </pre>
     *
     * <code>optional bytes public_key = 1;</code>
     * @return The publicKey.
     */
    com.google.protobuf.ByteString getPublicKey();
  }
  /**
   * Protobuf type {@code securegcm.Ukey2ClientFinished}
   */
  public static final class Ukey2ClientFinished extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:securegcm.Ukey2ClientFinished)
      Ukey2ClientFinishedOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Ukey2ClientFinished.class.getName());
    }
    // Use Ukey2ClientFinished.newBuilder() to construct.
    private Ukey2ClientFinished(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Ukey2ClientFinished() {
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientFinished_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientFinished_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished.Builder.class);
    }

    private int bitField0_;
    public static final int PUBLIC_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * public key matching selected handshake
     * </pre>
     *
     * <code>optional bytes public_key = 1;</code>
     * @return Whether the publicKey field is set.
     */
    @java.lang.Override
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * public key matching selected handshake
     * </pre>
     *
     * <code>optional bytes public_key = 1;</code>
     * @return The publicKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, publicKey_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, publicKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished)) {
        return super.equals(obj);
      }
      com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished other = (com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished) obj;

      if (hasPublicKey() != other.hasPublicKey()) return false;
      if (hasPublicKey()) {
        if (!getPublicKey()
            .equals(other.getPublicKey())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code securegcm.Ukey2ClientFinished}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:securegcm.Ukey2ClientFinished)
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinishedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientFinished_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientFinished_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished.class, com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished.Builder.class);
      }

      // Construct using com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.internal_static_securegcm_Ukey2ClientFinished_descriptor;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished getDefaultInstanceForType() {
        return com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished build() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished buildPartial() {
        com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished result = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.publicKey_ = publicKey_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished) {
          return mergeFrom((com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished other) {
        if (other == com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished.getDefaultInstance()) return this;
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                publicKey_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * public key matching selected handshake
       * </pre>
       *
       * <code>optional bytes public_key = 1;</code>
       * @return Whether the publicKey field is set.
       */
      @java.lang.Override
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * public key matching selected handshake
       * </pre>
       *
       * <code>optional bytes public_key = 1;</code>
       * @return The publicKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <pre>
       * public key matching selected handshake
       * </pre>
       *
       * <code>optional bytes public_key = 1;</code>
       * @param value The publicKey to set.
       * @return This builder for chaining.
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        publicKey_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * public key matching selected handshake
       * </pre>
       *
       * <code>optional bytes public_key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:securegcm.Ukey2ClientFinished)
    }

    // @@protoc_insertion_point(class_scope:securegcm.Ukey2ClientFinished)
    private static final com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished();
    }

    public static com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ukey2ClientFinished>
        PARSER = new com.google.protobuf.AbstractParser<Ukey2ClientFinished>() {
      @java.lang.Override
      public Ukey2ClientFinished parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Ukey2ClientFinished> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ukey2ClientFinished> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.security.cryptauth.lib.securegcm.UkeyProto.Ukey2ClientFinished getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_Ukey2Message_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_Ukey2Message_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_Ukey2Alert_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_Ukey2Alert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_Ukey2ClientInit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_Ukey2ClientInit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_Ukey2ClientInit_CipherCommitment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_Ukey2ClientInit_CipherCommitment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_Ukey2ServerInit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_Ukey2ServerInit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_securegcm_Ukey2ClientFinished_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_securegcm_Ukey2ClientFinished_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nukey.proto\022\tsecuregcm\"\270\001\n\014Ukey2Message" +
      "\0222\n\014message_type\030\001 \001(\0162\034.securegcm.Ukey2" +
      "Message.Type\022\024\n\014message_data\030\002 \001(\014\"^\n\004Ty" +
      "pe\022\026\n\022UNKNOWN_DO_NOT_USE\020\000\022\t\n\005ALERT\020\001\022\017\n" +
      "\013CLIENT_INIT\020\002\022\017\n\013SERVER_INIT\020\003\022\021\n\rCLIEN" +
      "T_FINISH\020\004\"\257\002\n\nUkey2Alert\022-\n\004type\030\001 \001(\0162" +
      "\037.securegcm.Ukey2Alert.AlertType\022\025\n\rerro" +
      "r_message\030\002 \001(\t\"\332\001\n\tAlertType\022\017\n\013BAD_MES" +
      "SAGE\020\001\022\024\n\020BAD_MESSAGE_TYPE\020\002\022\025\n\021INCORREC" +
      "T_MESSAGE\020\003\022\024\n\020BAD_MESSAGE_DATA\020\004\022\017\n\013BAD" +
      "_VERSION\020d\022\016\n\nBAD_RANDOM\020e\022\030\n\024BAD_HANDSH" +
      "AKE_CIPHER\020f\022\025\n\021BAD_NEXT_PROTOCOL\020g\022\022\n\016B" +
      "AD_PUBLIC_KEY\020h\022\023\n\016INTERNAL_ERROR\020\310\001\"\365\001\n" +
      "\017Ukey2ClientInit\022\017\n\007version\030\001 \001(\005\022\016\n\006ran" +
      "dom\030\002 \001(\014\022G\n\022cipher_commitments\030\003 \003(\0132+." +
      "securegcm.Ukey2ClientInit.CipherCommitme" +
      "nt\022\025\n\rnext_protocol\030\004 \001(\t\032a\n\020CipherCommi" +
      "tment\0229\n\020handshake_cipher\030\001 \001(\0162\037.secure" +
      "gcm.Ukey2HandshakeCipher\022\022\n\ncommitment\030\002" +
      " \001(\014\"\201\001\n\017Ukey2ServerInit\022\017\n\007version\030\001 \001(" +
      "\005\022\016\n\006random\030\002 \001(\014\0229\n\020handshake_cipher\030\003 " +
      "\001(\0162\037.securegcm.Ukey2HandshakeCipher\022\022\n\n" +
      "public_key\030\004 \001(\014\")\n\023Ukey2ClientFinished\022" +
      "\022\n\npublic_key\030\001 \001(\014*M\n\024Ukey2HandshakeCip" +
      "her\022\014\n\010RESERVED\020\000\022\017\n\013P256_SHA512\020d\022\026\n\021CU" +
      "RVE25519_SHA512\020\310\001B:\n+com.google.securit" +
      "y.cryptauth.lib.securegcmB\tUkeyProtoH\003"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_securegcm_Ukey2Message_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_securegcm_Ukey2Message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_Ukey2Message_descriptor,
        new java.lang.String[] { "MessageType", "MessageData", });
    internal_static_securegcm_Ukey2Alert_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_securegcm_Ukey2Alert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_Ukey2Alert_descriptor,
        new java.lang.String[] { "Type", "ErrorMessage", });
    internal_static_securegcm_Ukey2ClientInit_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_securegcm_Ukey2ClientInit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_Ukey2ClientInit_descriptor,
        new java.lang.String[] { "Version", "Random", "CipherCommitments", "NextProtocol", });
    internal_static_securegcm_Ukey2ClientInit_CipherCommitment_descriptor =
      internal_static_securegcm_Ukey2ClientInit_descriptor.getNestedTypes().get(0);
    internal_static_securegcm_Ukey2ClientInit_CipherCommitment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_Ukey2ClientInit_CipherCommitment_descriptor,
        new java.lang.String[] { "HandshakeCipher", "Commitment", });
    internal_static_securegcm_Ukey2ServerInit_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_securegcm_Ukey2ServerInit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_Ukey2ServerInit_descriptor,
        new java.lang.String[] { "Version", "Random", "HandshakeCipher", "PublicKey", });
    internal_static_securegcm_Ukey2ClientFinished_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_securegcm_Ukey2ClientFinished_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_securegcm_Ukey2ClientFinished_descriptor,
        new java.lang.String[] { "PublicKey", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
